name: Build Flutter APK

on:
  push:
    branches:
      - main

jobs:
  parse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Set up JSON Parsing
      - name: Cache jq
        uses: actions/cache@v3
        with:
          path: /usr/bin/jq
          key: ${{ runner.os }}-jq-version-1.6
          restore-keys: |
            ${{ runner.os }}-jq-

      - name: Install jq
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get install jq

      - name: Parse flavors from JSON
        id: set-flavors
        run: |
          FLAVORS_JSON=$(cat flavors.json)
          # Extract dynamic platforms based on the presence of `platforms` in each flavor
          PLATFORMS_LIST=$(echo "$FLAVORS_JSON" | jq -r '.flavors | to_entries[] | select(.value.is_upload == true) | .value.platforms | .[]' | sort -u)
          
          PLATFORMS_ARRAY=$(echo "$PLATFORMS_LIST" | sed 's/^/"/;s/$/"/' | paste -sd "," -)
          PLATFORMS_ARRAY="[$PLATFORMS_ARRAY]"
          echo "Flavors to build platform: $PLATFORMS_ARRAY"
          echo "platforms=$PLATFORMS_ARRAY" >> $GITHUB_ENV
  build:
    needs: parse
    runs-on: macos-latest
    steps:
    - name: Debug Print Platforms
      run: |
          echo "PLATFORMS_LIST: ${{ fromJson(env.platforms) }"
